<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="libwnck-Window-Action-Menu">
<refmeta>
<refentrytitle role="top_of_page" id="libwnck-Window-Action-Menu.top_of_page">WnckActionMenu</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBWNCK Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>WnckActionMenu</refname>
<refpurpose>a menu widget, used to manipulate a window.</refpurpose>
</refnamediv>
<refsect1 id="libwnck-Window-Action-Menu.stability-level">
<title>Stability Level</title>
Unstable, unless otherwise indicated
</refsect1>

<refsynopsisdiv id="libwnck-Window-Action-Menu.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>
<anchor id="WnckActionMenu"/>
<synopsis>
#include &lt;libwnck/libwnck.h&gt;

                    <link linkend="WnckActionMenu-struct">WnckActionMenu</link>;
<link linkend="GtkWidget">GtkWidget</link>*          <link linkend="wnck-action-menu-new">wnck_action_menu_new</link>                (<link linkend="WnckWindow">WnckWindow</link> *window);
<link linkend="GtkWidget">GtkWidget</link>*          <link linkend="wnck-create-window-action-menu">wnck_create_window_action_menu</link>      (<link linkend="WnckWindow">WnckWindow</link> *window);
</synopsis>
</refsynopsisdiv>
<refsect1 id="libwnck-Window-Action-Menu.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----<link linkend="GInitiallyUnowned">GInitiallyUnowned</link>
         +----<link linkend="GtkObject">GtkObject</link>
               +----<link linkend="GtkWidget">GtkWidget</link>
                     +----<link linkend="GtkContainer">GtkContainer</link>
                           +----<link linkend="GtkMenuShell">GtkMenuShell</link>
                                 +----<link linkend="GtkMenu">GtkMenu</link>
                                       +----WnckActionMenu
</synopsis>
</refsect1>
<refsect1 id="libwnck-Window-Action-Menu.implemented-interfaces" role="impl_interfaces">
<title role="impl_interfaces.title">Implemented Interfaces</title>
<para>
WnckActionMenu implements
 <link linkend="GtkBuildable">GtkBuildable</link> and  <link linkend="AtkImplementorIface">AtkImplementorIface</link>.</para>
</refsect1>
<refsect1 id="libwnck-Window-Action-Menu.properties" role="properties">
<title role="properties.title">Properties</title>
<synopsis>
  &quot;<link linkend="WnckActionMenu--window">window</link>&quot;                   <link linkend="gpointer">gpointer</link>              : Read / Write / Construct Only
</synopsis>
</refsect1>

<refsect1 id="libwnck-Window-Action-Menu.description" role="desc">
<title role="desc.title">Description</title>
<para>
A <link linkend="WnckActionMenu"><type>WnckActionMenu</type></link> is a menu containing items to manipulate a window.
Relevant actions are displayed in the menu, and updated if the window state
changes. The content of this menu is synchronized with the similar menu
available in Metacity.
</para>
<para>
<note>
 <para>
If there is only one workspace with a viewport, the <link linkend="WnckActionMenu"><type>WnckActionMenu</type></link> will
contain items to move the window in the viewport as if the viewport feature
was used to create workspaces. This is useful since viewport is generally
used as an alternative way to create virtual desktops.
 </para>
 <para>
The <link linkend="WnckActionMenu"><type>WnckActionMenu</type></link> does not support moving the window in the viewport if
there are multiple workspaces on the screen: those two notions are so
similar that having both at the same time would result in a menu which would
be confusing to the user.
 </para>
</note></para>
<para>
</para>
</refsect1>
<refsect1 id="libwnck-Window-Action-Menu.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="WnckActionMenu-struct" role="struct">
<title>WnckActionMenu</title>
<indexterm zone="WnckActionMenu-struct"><primary>WnckActionMenu</primary></indexterm>
<programlisting>typedef struct _WnckActionMenu WnckActionMenu;</programlisting>
<para>
The <link linkend="WnckActionMenu"><type>WnckActionMenu</type></link> struct contains only private fields and should not be
directly accessed.</para>
<para>
</para></refsect2>
<refsect2 id="wnck-action-menu-new" role="function" condition="since:2.22">
<title>wnck_action_menu_new ()</title>
<indexterm zone="wnck-action-menu-new" role="2.22"><primary>wnck_action_menu_new</primary></indexterm>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*          wnck_action_menu_new                (<link linkend="WnckWindow">WnckWindow</link> *window);</programlisting>
<para>
Creates a new <link linkend="WnckActionMenu."><type>WnckActionMenu.</type></link> The <link linkend="WnckActionMenu"><type>WnckActionMenu</type></link> will be filled with menu
items for window operations on <parameter>window</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>window</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="WnckWindow"><type>WnckWindow</type></link> for which a menu will be created.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a newly created <link linkend="WnckActionMenu."><type>WnckActionMenu.</type></link>

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.22</para></refsect2>
<refsect2 id="wnck-create-window-action-menu" role="function" condition="deprecated:2.22: Use wnck_action_menu_new() instead.">
<title>wnck_create_window_action_menu ()</title>
<indexterm zone="wnck-create-window-action-menu" role="deprecated"><primary>wnck_create_window_action_menu</primary></indexterm>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*          wnck_create_window_action_menu      (<link linkend="WnckWindow">WnckWindow</link> *window);</programlisting>
<warning><para><literal>wnck_create_window_action_menu</literal> has been deprecated since version 2.22 and should not be used in newly-written code. Use <link linkend="wnck-action-menu-new"><function>wnck_action_menu_new()</function></link> instead.</para></warning>
<para>
Creates a new <link linkend="WnckActionMenu."><type>WnckActionMenu.</type></link> The <link linkend="WnckActionMenu"><type>WnckActionMenu</type></link> will be filled with menu
items for window operations on <parameter>window</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>window</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="WnckWindow"><type>WnckWindow</type></link> for which a menu will be created.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a newly created <link linkend="WnckActionMenu."><type>WnckActionMenu.</type></link>

</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 id="libwnck-Window-Action-Menu.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="WnckActionMenu--window" role="property"><title>The <literal>&quot;window&quot;</literal> property</title>
<indexterm zone="WnckActionMenu--window"><primary>WnckActionMenu:window</primary></indexterm>
<programlisting>  &quot;window&quot;                   <link linkend="gpointer">gpointer</link>              : Read / Write / Construct Only</programlisting>
<para>The window that will be manipulated through this menu.</para></refsect2>
</refsect1>
<refsect1 id="libwnck-Window-Action-Menu.see-also">
<title>See Also</title>
<link linkend="WnckWindow"><type>WnckWindow</type></link>
</refsect1>

</refentry>
